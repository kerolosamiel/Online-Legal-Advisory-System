@using ELawyer.Utility
@model ELawyer.Models.ViewModels.LawyerConfirmation

@{
    ViewData["Title"] = "confirmation";
}

<h1>confirmation</h1>

<h4>Lawyer</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Confirmation" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID"/>

            @if (User.IsInRole(SD.LawyerRole))
            {
                <div class="form-group">
                    <label asp-for="Lawyer.FrontCardImage" class="control-label"></label>
                    <input asp-for="Lawyer.FrontCardImage" class="form-control" type="file" name="file1"/>
                    <span asp-validation-for="Lawyer.FrontCardImage" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Lawyer.BackCardImage" class="control-label"></label>
                    <input asp-for="Lawyer.BackCardImage" class="form-control" type="file" name="file2"/>
                    <span asp-validation-for="Lawyer.BackCardImage" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("`_ValidationScriptsPartial");
    }
}
